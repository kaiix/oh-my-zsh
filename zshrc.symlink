# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="simple"
# ZSH_THEME="lukerandall"
# ZSH_THEME="kphoen"
ZSH_THEME="kaiix"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(common-aliases zsh-completions git colored-man-pages autojump zsh-autosuggestions golang docker docker-compose)

source $ZSH/oh-my-zsh.sh
source $ZSH/config.zsh
source $ZSH/aliases.zsh
source $ZSH/git/aliases.zsh
source $ZSH/git/config.zsh

# Run `compinit` manually for `zsh-completions`
#autoload -U compinit && compinit
unsetopt correct
autoload -U bashcompinit
bashcompinit
for bash_completion ($ZSH/bash_completion.d/*.bash); do
    source $bash_completion
done

# command syntax highlight
zle_highlight=(default:fg=green)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=242'

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
export PATH=$HOME/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:$PATH

# Misc
export PYTHONIOENCODING=utf-8
export GOPATH=$HOME/go

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

eval "$(direnv hook zsh)"

fixssh() {
    for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT; do
        if (tmux show-environment | grep "^${key}" > /dev/null); then
            value=`tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//"`
            export ${key}="${value}"
        fi
    done
}

tm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}


v() {
  local files
  files=$(grep '^>' ~/.viminfo | cut -c3- |
          while read line; do
            [ -f "${line/\~/$HOME}" ] && echo "$line"
          done | fzf-tmux -d -m -q "$*" -1) && vim ${files//\~/$HOME}
}

if [ `uname` = "Darwin" ]
then
    source $ZSH/mac.zsh
fi

source $ZSH/locals.zsh

if [ -e /Users/kaiix/.nix-profile/etc/profile.d/nix.sh ]; then . /Users/kaiix/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
